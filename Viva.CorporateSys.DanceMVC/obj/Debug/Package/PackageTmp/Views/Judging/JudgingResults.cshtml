@using System.Text
@using Viva.CorporateSys.DanceAPI
@model Viva.CorporateSys.DanceMVC.ViewModels.JudgingResultViewModel

@{
    ViewBag.Title = "Judging Results";
    Model.ActiveCompetitionListOnly.Add(new Competition { Id = Guid.Empty, DivisionName = "Show all" });
    Model.ActiveCompetitionListOnly = Model.ActiveCompetitionListOnly.OrderBy(x => x.StartedOn).ThenBy(x=>x.CompetitionName).ToList();
    Model.ActiveCompetitorListOnly.Add(new Competitor { Id = Guid.Empty, EntityNumber = 0, EntityName = "Show all" });
    Model.ActiveCompetitorListOnly = Model.ActiveCompetitorListOnly.OrderBy(x => x.EntityNumberName).ToList();
    var competitionList = new SelectList(Model.ActiveCompetitionListOnly, "Id", "CompetitionDropdownName");
    var competitorList = new SelectList(Model.ActiveCompetitorListOnly, "Id", "EntityNumberName");
}

<style type='text/css'>
    table{border-collapse:collapse;border: 1px solid lightgray !important; width:100% !important;}table td{border:1px solid lightgray !important;padding: 5px !important;}
    hr { 
        display: block;
        margin-top: 0.5em;
        margin-bottom: 0.5em;
        margin-left: auto;
        margin-right: auto;
        border-style: solid;
        border-width: 2px;
    }
</style>


<h2>NZSO @DateTime.Now.Year Results</h2>
@using (Html.BeginForm("JudgingResults", "Judging", FormMethod.Post, new { id = "formFilterJudgings", name = "formFilterJudgings" }))
    {

    <fieldset>
        <div class="no-print">
            Select a competition:  @Html.DropDownList("competitionId", competitionList, new
                              {
                                  size = "1",
                                  style = "width: 100%"
                              }
            )
            <br /><br />
            Select a competitor:  @Html.DropDownList("competitorId", competitorList, new
                              {
                                  size = "1",
                                  style = "width: 100%"
                              })


            <br /><br />
            <input type="submit" id="submit" name="submit" value="Apply filter" />
            <input type="button" id="reset" name="reset" value="Show all" />
            <input type="checkbox" id="hideIndividualResults" name="hideIndividualResults" value="true" /> Hide individual judging results
        </div>
        </fieldset>
    
    <script>
        window.onload = (function () {

            $("input[id='hideIndividualResults']").change(toggleIndividualResults);
            
            $("input[id='reset']").click(resetForm);

            if ($('#competitorId').val() != '@Guid.Empty') {
                $("table[description='team']").hide(100);
                $("tr[description='team']").hide(100);
                $("table[id='" + $("#competitorId").val() + "']").show(200);
                $("tr[id='" + $("#competitorId").val() + "']").show(200);
            }
        });

        function toggleIndividualResults(event)
        {

            if(this.checked)
                $("table[description='team']").hide(100);
            else
                $("table[description='team']").show(100);
        }

        function resetForm(event) {
            
            $('select').val("@Guid.Empty");
            alert($('#formFilterJudgings').form.id);
           
        }
    </script>
                  
}
        <p>
            @{
        var comps = Model.ActiveCompetitions;
        var criteria = Model.Criteria;
        var report = new StringBuilder();


        comps.ToList().ForEach(comp =>
        {
            var listOfJudgings = new List<Judging>();

            var competitorCount = comp.CompetitorCompetitions.Count;
            listOfJudgings = comp.JudgeCompetitions.SelectMany(x => x.Judgings).ToList();
            
            report.Append("<table>");

            report.Append("<tr>");
            report.Append("<td><b>Competition</b></td><td colspan='6' style='width:60%'><b>" + comp.CompetitionName + comp.Text + "</b></td>");
            report.Append("</tr>");
            report.Append("<tr>");
            report.Append("<td>" + "Division / Cateory" + "</td><td colspan='6'>" + comp.DivisionName + " / " + comp.CategoryName + "</td>");
            report.Append("</tr>");
            report.Append("<tr>");
            report.Append("<td>" + "Location" + "</td><td colspan='6'>" + comp.Location + " Competitors/Judgings: " + competitorCount + "/" + listOfJudgings.Count()+  "</td>");
            report.Append("</tr>");
            report.Append("<tr>");
            report.Append("<td>" + "Start" + "</td><td colspan='6'>" + comp.StartedOn.Value.ToString("yyyy/MMM/dd HH:mm:ss") + "</td>");
            report.Append("</tr></table>");

            
            

            var listOfJudgingsGroupedByCompetitorQuery =
            listOfJudgings.GroupBy(x => x.CompetitorCompetition.Competitor).Select(g => new
            {
                Key = g.Key,
                Value = g.Select(y => y).ToList()
            }).OrderBy(x=>x.Key.CompetitorCompetitions.First().Sequence);

            /*
            listOfJudgingsGroupedByCompetitorQuery.ToList().ForEach(c =>
            {
                if (!c.Value.Any(x => x.IsExcluded))
                {
                    var orderedJudgings =
                        c.Value.Where(x => x.ScorePoints > 0).OrderBy(x => x.ScorePoints).ToList();

                    orderedJudgings.Last().IsExcluded = true;
                    orderedJudgings.First().IsExcluded = true;

                    //compSvc.SubmitJudging(orderedJudgings.Last());
                    //compSvc.SubmitJudging(orderedJudgings.First());
                }
            });
            */



            listOfJudgingsGroupedByCompetitorQuery.OrderBy(x=>x.Key.CompetitorCompetitions.First().Sequence).ToList().ForEach(c =>
            {


                report.Append("<table description='team' id='" + c.Key.Id.ToString() + "'>");

                report.Append("<tr>");
                report.Append("<td><b>Team Name</b></td><td colspan='10' style='width:60%'><b>" + c.Key.EntityName + " " + c.Key.FirstName + " " + c.Key.LastName + " #" + c.Key.EntityNumber + "</b></td>");
                report.Append("</tr>");

                var total = 0.0;
                var totalPenalty = 0.0;

                var criteriaIds = criteria.OrderBy(x => x.DisplaySequence).Select(x => x.Id).Distinct().ToList(); //c.Value.Select(x => x.Criterion.Id).Distinct().ToList();

                var judges = c.Value.Select(x => x.JudgeCompetition.Judge).Distinct().OrderBy(x => x.LastName).ThenBy(x => x.FirstName).ToList();

                var judgeValues = "";

                judges.ForEach(x => judgeValues += "<td><b>" + x.FirstName + "<br/>" + x.LastName + "</b></td>");

                report.Append("<tr>");
                report.Append("<td>Judges</td>" + judgeValues + "<td style='width:30%'><b>Average</b></td>");
                report.Append("</tr>");

                //var rankings = new Dictionary<Competitor, double>();

                criteriaIds.ForEach(cr =>
                {
                    var judgingMatched = c.Value.FirstOrDefault(x => x.Criterion.Id == cr);
                    var criterion = (judgingMatched != null) ? judgingMatched.Criterion : criteria.FirstOrDefault(x => x.Id == cr);
                    var scoresAllQuery = c.Value.Where(x => x.Criterion.Id == cr);
                    var scoreQuery = scoresAllQuery.Where(x => !x.IsExcluded);
                    var scores = scoreQuery.ToList();
                    var scoresAll =
                        scoresAllQuery.OrderBy(x => x.JudgeCompetition.Judge.LastName)
                            .ThenBy(x => x.JudgeCompetition.Judge.FirstName)
                            .ToList();
                    var scoreAvg = (scores.Count == 0) ? 0 : scoreQuery.Average(x => x.ScorePoints);



                    var scoreValues = "";

                    var cursor = 0;

                    judges.ForEach(x =>
                    {
                        var matchedJudging = scoresAll.FirstOrDefault(y => y.JudgeCompetition.Judge.Id == x.Id);

                        if (matchedJudging == null)
                            scoreValues += "<td></td>";
                        else
                            scoreValues += "<td>" + ((matchedJudging.IsExcluded) ? "<strike><b><font color='red'>" : "") +
                                           matchedJudging.ScorePoints +
                                           ((matchedJudging.IsExcluded) ? "</font></b></strike>" : "") + "</td>";
                    });


                    report.Append("<tr>");
                    report.Append("<td>" + criterion.Text + "</td>" + scoreValues + "<td>" + scoreAvg + "</td>");
                    report.Append("</tr>");

                    if (scoreAvg > 0)
                        total += scoreAvg;
                    else
                        totalPenalty += scoreAvg;
                });

                //rankings.Add(c.Key, total);

                var cc = comp.CompetitorCompetitions.FirstOrDefault(x => x.Competitor.Id == c.Key.Id);
                
                cc.TotalPenaltyPoints = totalPenalty;
                cc.TotalScorePoints = total;
                

                report.Append("<tr>");
                report.Append("<td><b>Total</b></td><td colspan='10'><b>" + total + "</b></td>");
                report.Append("</tr></table>");

            });

            report.Append("</table><table><tr>");
            report.Append("<td><b>Rankings</b></td><td style='width:60%' colspan='10'># of Competitors/Judgings: " + competitorCount + "/" + listOfJudgings.Count() + "</td>");
            report.Append("</tr>");

            report.Append("<tr>");
            report.Append("<td>Placing</td><td>Score</td><td>Team #</td><td>Team Name</td><td>Judgings #</td>");
            report.Append("</tr>");

            var placing = 0;
            var previousScore = -9999.00;

            comp.CompetitorCompetitions.OrderByDescending(x => x.TotalCombined).ToList().ForEach(c =>
            {
                if (previousScore != c.TotalCombined)
                    placing += 1;

                report.Append("<tr description='team' id='" + c.Competitor.Id.ToString() + "'>");
                report.Append("<td><b>" + placing + "</b></td><td>" + c.TotalCombined + "</td><td>" + c.Competitor.EntityNumber + "</td><td>" + c.Competitor.EntityName + " " + c.Competitor.FirstName + " " + c.Competitor.LastName + "</td><td>" + c.Judgings.Count() + "</td>");
                report.Append("</tr>");

                previousScore = c.TotalCombined;
            });

            report.Append("</table><br/><br/><HR>");
        });




            }

            @Html.Raw(report.ToString());
        </p>
